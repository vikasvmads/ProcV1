// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Procuerment.Models;

namespace Procuerment.Migrations
{
    [DbContext(typeof(ProcuermentContext))]
    [Migration("20201009063755_Authoriztion5")]
    partial class Authoriztion5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Procuerment.Models.BaselineType", b =>
                {
                    b.Property<int>("BaselineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BaselineID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("BaselineId");

                    b.ToTable("BaselineType");
                });

            modelBuilder.Entity("Procuerment.Models.CompanyCode", b =>
                {
                    b.Property<int>("PocompanyCode")
                        .HasColumnName("POCompanyCode")
                        .HasColumnType("int");

                    b.Property<string>("PocompanyName")
                        .IsRequired()
                        .HasColumnName("POCompanyName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("PocompanyCode")
                        .HasName("CompanyCode_pk");

                    b.ToTable("CompanyCode");
                });

            modelBuilder.Entity("Procuerment.Models.FinancialStatementArea", b =>
                {
                    b.Property<int>("FinancialStatementAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FinancialStatementAreaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("FinancialStatementAreaId");

                    b.ToTable("FinancialStatementArea");
                });

            modelBuilder.Entity("Procuerment.Models.InitiativeStatus", b =>
                {
                    b.Property<int>("InitiativeStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("InitiativeStatusId");

                    b.ToTable("InitiativeStatus");
                });

            modelBuilder.Entity("Procuerment.Models.MaterialGroup", b =>
                {
                    b.Property<string>("UnspscMaterial")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("UnspscMaterial")
                        .HasName("MaterialGroup_pk");

                    b.ToTable("MaterialGroup");
                });

            modelBuilder.Entity("Procuerment.Models.MaterialGroupDesccription", b =>
                {
                    b.Property<string>("MaterialType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MaterialTypeDescription")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("MaterialType")
                        .HasName("MaterialGroupDesccription_pk");

                    b.ToTable("MaterialGroupDesccription");
                });

            modelBuilder.Entity("Procuerment.Models.MaterialMater", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MaterialType")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("MaterialId")
                        .HasName("MaterialMater_pk");

                    b.ToTable("MaterialMater");
                });

            modelBuilder.Entity("Procuerment.Models.MilestoneStatus", b =>
                {
                    b.Property<int>("MilestoneStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MilestoneStatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("MilestoneStatusId");

                    b.ToTable("MilestoneStatus");
                });

            modelBuilder.Entity("Procuerment.Models.Period", b =>
                {
                    b.Property<int>("PeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PeriodID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("PeriodId");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("Procuerment.Models.PlantName", b =>
                {
                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("PlantName1")
                        .IsRequired()
                        .HasColumnName("PlantName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("PlantId")
                        .HasName("PlantName_pk");

                    b.ToTable("PlantName");
                });

            modelBuilder.Entity("Procuerment.Models.Procurement", b =>
                {
                    b.Property<int>("ProcurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProcurementID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaselineId")
                        .HasColumnName("BaselineID")
                        .HasColumnType("int");

                    b.Property<decimal>("BaselinedetailsPrice")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<decimal>("BaselinedetailsPriceunit")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<decimal>("BaselinedetailsQty")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<string>("BaselinedetailsUom")
                        .IsRequired()
                        .HasColumnName("BaselinedetailsUOM")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int?>("CompanyCode")
                        .HasColumnType("int");

                    b.Property<decimal>("CostReduction")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<DateTime>("Creationdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("CurrencyImpact")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("CurrencyType")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Discountgiven")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<decimal>("EstimatedSavings")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<decimal>("ExternalCost")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<int>("FinancialStatementAreaId")
                        .HasColumnName("FinancialStatementAreaID")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<string>("IndexsavingConsideration")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("InitiativeDescription")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("InitiativeStatusId")
                        .HasColumnType("int");

                    b.Property<string>("InitiativeTitle")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Initiativedetails")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<decimal>("InitiativedetailsDiscountgiven")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<decimal>("InitiativedetailsNewSpendvalue")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<decimal>("InitiativedetailsNewprice")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<decimal>("InitiativedetailsPriceIncrease")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<decimal>("InternalCost")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<string>("LeverDescription")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("MaterialDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MaterialGroup")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MaterialSubstitution")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Methods")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("MilestoneActualDuedate")
                        .HasColumnType("datetime");

                    b.Property<string>("MilestoneDescription")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("MilestonePlannedDuedate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("MilestoneStartdatemilestone")
                        .HasColumnType("datetime");

                    b.Property<int>("MilestoneStatusId")
                        .HasColumnName("MilestoneStatusID")
                        .HasColumnType("int");

                    b.Property<int>("Milestonestatuspercentage")
                        .HasColumnType("int");

                    b.Property<decimal>("NetSavings")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<string>("NewMaterial")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("PeriodId")
                        .HasColumnName("PeriodID")
                        .HasColumnType("int");

                    b.Property<int>("Periodofsaving")
                        .HasColumnType("int");

                    b.Property<int?>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("PriceIncrease")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PurchaseOrganization")
                        .IsRequired()
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal>("Qty")
                        .HasColumnName("QTY")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnName("UOM")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("ValueContributionId")
                        .HasColumnName("ValueContributionID")
                        .HasColumnType("int");

                    b.Property<int>("ValueLeverId")
                        .HasColumnName("ValueLeverID")
                        .HasColumnType("int");

                    b.Property<string>("VolumeIncrease")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ProcurementId");

                    b.HasIndex("BaselineId");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("FinancialStatementAreaId");

                    b.HasIndex("InitiativeStatusId");

                    b.HasIndex("MaterialDescription");

                    b.HasIndex("MaterialGroup");

                    b.HasIndex("MilestoneStatusId");

                    b.HasIndex("PeriodId");

                    b.HasIndex("PlantId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("ValueContributionId");

                    b.HasIndex("ValueLeverId");

                    b.ToTable("procurement");
                });

            modelBuilder.Entity("Procuerment.Models.PurchaseOrganization", b =>
                {
                    b.Property<string>("PurchaseOrganization1")
                        .HasColumnName("PurchaseOrganization")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("OrganizationDescription")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("PurchaseOrganization1")
                        .HasName("PurchaseOrganization_pk");

                    b.ToTable("PurchaseOrganization");
                });

            modelBuilder.Entity("Procuerment.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MODIFY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("ROWSTATE")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Procuerment.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Procuerment.Models.Supplier", b =>
                {
                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<string>("VendorCountry")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("VendorType")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("VendorId")
                        .HasName("Supplier_pk");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Procuerment.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MODIFY_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MODIFY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("ROWSTATE")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("Procuerment.Models.UserRoleMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MODIFY_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MODIFY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ROWSTATE")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoleMapping");
                });

            modelBuilder.Entity("Procuerment.Models.ValueContribution", b =>
                {
                    b.Property<int>("ValueContributionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ValueContributionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("ValueContributionId");

                    b.ToTable("ValueContribution");
                });

            modelBuilder.Entity("Procuerment.Models.ValueLever", b =>
                {
                    b.Property<int>("ValueLeverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ValueLeverID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("ValueLeverId");

                    b.ToTable("ValueLever");
                });

            modelBuilder.Entity("Procuerment.Models.Procurement", b =>
                {
                    b.HasOne("Procuerment.Models.BaselineType", "Baseline")
                        .WithMany("Procurement")
                        .HasForeignKey("BaselineId")
                        .HasConstraintName("FK__procureme__Basel__4E88ABD4")
                        .IsRequired();

                    b.HasOne("Procuerment.Models.CompanyCode", "CompanyCodeNavigation")
                        .WithMany("Procurement")
                        .HasForeignKey("CompanyCode")
                        .HasConstraintName("FK__procureme__Compa__09A971A2");

                    b.HasOne("Procuerment.Models.FinancialStatementArea", "FinancialStatementArea")
                        .WithMany("Procurement")
                        .HasForeignKey("FinancialStatementAreaId")
                        .HasConstraintName("FK__procureme__Finan__52593CB8")
                        .IsRequired();

                    b.HasOne("Procuerment.Models.InitiativeStatus", "InitiativeStatus")
                        .WithMany("Procurement")
                        .HasForeignKey("InitiativeStatusId")
                        .HasConstraintName("FK__procureme__Initi__5070F446")
                        .IsRequired();

                    b.HasOne("Procuerment.Models.MaterialGroupDesccription", "MaterialDescriptionNavigation")
                        .WithMany("Procurement")
                        .HasForeignKey("MaterialDescription")
                        .HasConstraintName("FK__procureme__Mater__07C12930");

                    b.HasOne("Procuerment.Models.MaterialGroup", "MaterialGroupNavigation")
                        .WithMany("Procurement")
                        .HasForeignKey("MaterialGroup")
                        .HasConstraintName("FK__procureme__Mater__7C4F7684");

                    b.HasOne("Procuerment.Models.MilestoneStatus", "MilestoneStatus")
                        .WithMany("Procurement")
                        .HasForeignKey("MilestoneStatusId")
                        .HasConstraintName("FK__procureme__Miles__5535A963")
                        .IsRequired();

                    b.HasOne("Procuerment.Models.Period", "Period")
                        .WithMany("Procurement")
                        .HasForeignKey("PeriodId")
                        .HasConstraintName("FK__procureme__Perio__5441852A")
                        .IsRequired();

                    b.HasOne("Procuerment.Models.PlantName", "Plant")
                        .WithMany("Procurement")
                        .HasForeignKey("PlantId")
                        .HasConstraintName("FK__procureme__Plant__0F624AF8");

                    b.HasOne("Procuerment.Models.Roles", "Role")
                        .WithMany("Procurement")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__procureme__RoleI__534D60F1")
                        .IsRequired();

                    b.HasOne("Procuerment.Models.Supplier", "Supplier")
                        .WithMany("Procurement")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__procureme__Suppl__0E6E26BF");

                    b.HasOne("Procuerment.Models.ValueContribution", "ValueContribution")
                        .WithMany("Procurement")
                        .HasForeignKey("ValueContributionId")
                        .HasConstraintName("FK__procureme__Value__5165187F")
                        .IsRequired();

                    b.HasOne("Procuerment.Models.ValueLever", "ValueLever")
                        .WithMany("Procurement")
                        .HasForeignKey("ValueLeverId")
                        .HasConstraintName("FK__procureme__Value__4F7CD00D")
                        .IsRequired();
                });

            modelBuilder.Entity("Procuerment.Models.UserRoleMapping", b =>
                {
                    b.HasOne("Procuerment.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Procuerment.Models.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
